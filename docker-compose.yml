services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  zookeeper:
    image: zookeeper:3.6.3
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  flink-jobmanager:
    image: apache/flink:1.17.0
    environment:
      - FLINK_PROPERTIES=jobmanager.rpc.address=flink-jobmanager
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - kafka
    networks:
      - flink-network

  flink-taskmanager:
    image: apache/flink:1.17.0
    depends_on:
      - flink-jobmanager
    restart: always
    networks:
      - flink-network

volumes:
  postgres_data:

networks:
  flink-network:
    driver: bridge
